/* imports */

COMPILER Annotation

  /* arbitrary Java code */
LoopBound result;
public LoopBound getResult()
{
	return result;
}
LoopBound
buildLoopBound(String cmpOp, Long bound, SymbolicMarker marker)
{
	long lb = 0,
	     ub = bound;
	if(cmpOp.equals("=")) lb = ub;
	if(marker == null) return new LoopBound(lb,ub);
	else               return LoopBound.markerBound(lb,ub,marker);
}
/*--------------------------------------------------------------------*/

CHARACTERS
  letter    = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
  digit     = "0123456789".
  cr        = '\r'.
  lf        = '\n'.
  tab       = '\t'.
  stringCh  = ANY - '"' - '\\' - cr - lf.
  charCh    = ANY - '\'' - '\\' - cr - lf.
  printable = '\u0020' .. '\u007e'.
  hex       = "0123456789abcdef".

TOKENS
  ident     = letter { letter | digit }.
  number    = digit { digit }.
  string    = '"' { stringCh | '\\' printable } '"'.
  char      = '\'' ( charCh | '\\' printable { hex } ) '\''.
  cmpop     = ['<'] '='.
COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO cr lf

IGNORE cr + lf + tab

/*--------------------------------------------------------------------*/

PRODUCTIONS

Annotation
= 
  (. Long expr; SymbolicMarker marker; .)
  "loop"
    cmpop (. String compareOperator = t.val; .)
    Expression<out expr>
    Context<out marker>        
  (. result = buildLoopBound(compareOperator, expr, marker); .)
.

Expression<out Long expr>
=
  number   (. expr = Long.parseLong(t.val); .)
.
Context<out SymbolicMarker marker> (. marker = null; .) 
=   
   "outer"      (. int outerLoop = 1; .)
    [ "(" number (. outerLoop = Integer.parseInt(t.val); .) ")"]
    (. marker = SymbolicMarker.outerLoopMarker(outerLoop); .)
  | "method"     (. String markerMethod = null; .)
    ["(" string  (. markerMethod = t.val; .) ")"]
    (. marker = SymbolicMarker.methodMarker(markerMethod); .)
  |
.

END Annotation.
