# Example WCET Analysis configuration file
# ----------------------------------------
# ----------------------------------------

# Project configuration
# --------------------------

# ==================================
# Common, frequently changed options
# ==================================

# the name of the main entry point of the RTJava application
# -------------------------------------------------------------------------------------------
mm=wcet.StartKfl.main

# the name (optional: class,signature) of the method to be analyzed [default: measure]
# ------------------------------------------------------------------------------------
target-method=measure

# whether dataflow analysis should be performed [default: false]
use-dfa=no

# method cache implementation 
# [LRU_CACHE, FIFO_CACHE, LRU_VARBLOCK_CACHE, FIFO_VARBLOCK_CACHE, NO_METHOD_CACHE] 
# [default: FIFO_VARBLOCK_CACHE]
jop.cache-impl=FIFO_VARBLOCK_CACHE

# size of the cache in words [default: 1024]
# ------------------------------------------
jop.cache-size-words=1024

# number of cache blocks [default: 16]
# ------------------------------------
jop.cache-blocks=16

# ==================================
# Path configuration
# ==================================

# directory for output of the analysis tool [default: java/target/wcet/]
# ----------------------------------------------------------------------
outdir=java/target/wcet

# name of the 'project', used when generating reports [optional]
# --------------------------------------------------------------
#projectname=wcet.StartKfl_measure

# paths for looking up class files
# --------------------------------
classpath=java/target/dist/classes/

# paths for looking up source files
# ---------------------------------
splib=java/target/src/common:java/target/src/jdk_base:java/target/src/jdk11:java/target/src/rtapi
sp=java/target/src/app:java/target/src/bench:${splib}:java/target/src/test

# ==================================
# Evaluation
# ==================================

# save analysis results to the given file (CVS) [optional]
# --------------------------------------------------------
#result-file=java/target/wcet/results.txt

# append analysis results to the result file [default: false]
# -----------------------------------------------------------
#result-append=yes

# ===================================
# IPET Options
# ===================================

# cache approximation for IPET
# [ALWAYS_HIT, GLOBAL_ALL_FIT, ALL_FIT_REGIONS, ALL_FIT_SIMPLE, ALWAYS_MISS]
# [default: ALL_FIT_REGIONS]
# --------------------------------------------------------------------------
ipet-cache-approx=ALL_FIT_REGIONS

# assume method cache loads in miss-once areas always happen on invoke (unsafe) [default: false]
# ----------------------------------------------------------------------------------------------
ipet-assume-miss-once-on-invoke=false

# whether the LP problems should be dumped to files [default: true]
# -----------------------------------------------------------------
ipet-dump-ilp=true

# ===================================
# UPPAAL Options
# ===================================

# Use Uppaal to determine the WCET bound [default: false]
# -------------------------------------------------------
uppaal=no

# binary of the uppaal model-checker (verifyta) [default: verifyta]
# ---------------------------------------------------------------------
#uppaal-verifier=verifyta

# dynamic cache approximation (uppaal) [ALWAYS_MISS, CACHE_SIM] [default: ALWAYS_MISS]
# ------------------------------------------------------------------------------------
uppaal-cache-approx=ALWAYS_MISS

# assume the cache is initially empty (FIFO) - otherwise use 1/2 cache [default: true]
# ------------------------------------------------------------------------------------
uppaal-empty-initial-cache=true

# assume all loop bounds are tight in simulation 
# (unsafe in the presence of timing anomalies) [default: false]
# -------------------------------------------------------------
uppaal-tight-bounds=false

# collapse inner loops / leaf methods to speed up simulation [default: false]
# ---------------------------------------------------------------------------
uppaal-collapse-leaves=false

# use UPPAAL's convex hull approximation [default: false]
# -------------------------------------------------------
uppaal-convex-hull=false

# use one template per process [default: false]
# ---------------------------------------------
uppaal-supergraph=false

# use progress measures [default:true]
# ------------------------------------
uppaal-progress-measure=true

# limit UPPAAL to methods below the given expanded cyclomatic complexity [optional]
# ---------------------------------------------------------------------------------
#uppaal-treshold=200

# ===================================
# Report Options
# ===================================

# the directory to write reports into [optional]
# ----------------------------------------------
#reportdir=

# directory with custom templates for report generation [optional]
# ----------------------------------------------------------------
#templatedir=

# the error log file [default: error.log.html]
# --------------------------------------------
#error-log=

# the info log file [default: info.log.html]
# ------------------------------------------
#info-log=

# if graphs should be generated from java, the path to the 'dot' binary [optional]
# --------------------------------------------------------------------------------
#program-dot=dot


# Additional log4j configuration
# ----------------------------------
# Note that the application per default adds and console appender (ACONSOLE),
# and if reporting is activated, a report error appender (AERROR) and a
# report info appender (AINFO), logging to files in the report directory.

#log4j.logger.com.jopdesign.wcet.frontend=DEBUG
#log4j.appender.ACONSOLE.treshold=info
#log4j.logger.com.jopdesign.wcet.frontend.FlowGraphExport=TRACE
#log4j.logger.com.jopdesing.wcet.report.InvokeDot=INFO
#log4j.appender.AERROR.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n
